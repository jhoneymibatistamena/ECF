--  Ejemplo de Swagger UI
--  No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
--
--  
--  
--
--  NOTE: This package is auto generated by the swagger code generator 2.4.32.
--  https://github.com/swagger-api/swagger-codegen.git
--  Do not edit the class manually.
with Swagger.Streams;
with Swagger.Servers.Operation;
package body .Skeletons is

   package body Skeleton is


      package API_1 is
         new Swagger.Servers.Operation (Handler => 1,
                                        Method  => Swagger.Servers.POST,
                                        URI     => "/api/fe/Autenticacion/api/ValidacionCertificado");

      --  
      procedure 1
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type) is
         Impl : Implementation_Type;
      begin
         Impl.1 (Context);

      end 1;

      package API_2 is
         new Swagger.Servers.Operation (Handler => 2,
                                        Method  => Swagger.Servers.GET,
                                        URI     => "/api/fe/Autenticacion/api/Semilla");

      --  
      procedure 2
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type) is
         Impl : Implementation_Type;
      begin
         Impl.2 (Context);

      end 2;

      package API_3 is
         new Swagger.Servers.Operation (Handler => 3,
                                        Method  => Swagger.Servers.POST,
                                        URI     => "/api/fe/Recepcion/api/ecf");

      --  
      procedure 3
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type) is
         Impl : Implementation_Type;
      begin
         Impl.3 (Context);

      end 3;

      package API_4 is
         new Swagger.Servers.Operation (Handler => 4,
                                        Method  => Swagger.Servers.POST,
                                        URI     => "/api/fe/AprobacionComercial/api/ecf");

      --  
      procedure 4
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type) is
         Impl : Implementation_Type;
      begin
         Impl.4 (Context);

      end 4;

      procedure Register (Server : in out Swagger.Servers.Application_Type'Class) is
      begin
         Swagger.Servers.Register (Server, API_1.Definition);
         Swagger.Servers.Register (Server, API_2.Definition);
         Swagger.Servers.Register (Server, API_3.Definition);
         Swagger.Servers.Register (Server, API_4.Definition);
      end Register;

   end Skeleton;

   package body Shared_Instance is


      --  
      procedure 1
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type) is
      begin
         Server.1 (Context);

      end 1;

      package API_1 is
         new Swagger.Servers.Operation (Handler => 1,
                                        Method  => Swagger.Servers.POST,
                                        URI     => "/api/fe/Autenticacion/api/ValidacionCertificado");

      --  
      procedure 2
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type) is
      begin
         Server.2 (Context);

      end 2;

      package API_2 is
         new Swagger.Servers.Operation (Handler => 2,
                                        Method  => Swagger.Servers.GET,
                                        URI     => "/api/fe/Autenticacion/api/Semilla");

      --  
      procedure 3
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type) is
      begin
         Server.3 (Context);

      end 3;

      package API_3 is
         new Swagger.Servers.Operation (Handler => 3,
                                        Method  => Swagger.Servers.POST,
                                        URI     => "/api/fe/Recepcion/api/ecf");

      --  
      procedure 4
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type) is
      begin
         Server.4 (Context);

      end 4;

      package API_4 is
         new Swagger.Servers.Operation (Handler => 4,
                                        Method  => Swagger.Servers.POST,
                                        URI     => "/api/fe/AprobacionComercial/api/ecf");

      procedure Register (Server : in out Swagger.Servers.Application_Type'Class) is
      begin
         Swagger.Servers.Register (Server, API_1.Definition);
         Swagger.Servers.Register (Server, API_2.Definition);
         Swagger.Servers.Register (Server, API_3.Definition);
         Swagger.Servers.Register (Server, API_4.Definition);
      end Register;

      protected body Server is
         --  
         procedure 1 (Context : in out Swagger.Servers.Context_Type) is
         begin
            Impl.1 (Context);
         end 1;

         --  
         procedure 2 (Context : in out Swagger.Servers.Context_Type) is
         begin
            Impl.2 (Context);
         end 2;

         --  
         procedure 3 (Context : in out Swagger.Servers.Context_Type) is
         begin
            Impl.3 (Context);
         end 3;

         --  
         procedure 4 (Context : in out Swagger.Servers.Context_Type) is
         begin
            Impl.4 (Context);
         end 4;

      end Server;

   end Shared_Instance;

end .Skeletons;
