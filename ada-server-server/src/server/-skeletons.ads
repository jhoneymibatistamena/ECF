--  Ejemplo de Swagger UI
--  No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
--
--  
--  
--
--  NOTE: This package is auto generated by the swagger code generator 2.4.32.
--  https://github.com/swagger-api/swagger-codegen.git
--  Do not edit the class manually.
with Swagger.Servers;
with .Models;
with Security.Permissions;
package .Skeletons is
   use .Models;
   type Server_Type is limited interface;



   --  
   procedure 1
      (Server : in out Server_Type
       ;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  
   procedure 2
      (Server : in out Server_Type
       ;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  
   procedure 3
      (Server : in out Server_Type
       ;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  
   procedure 4
      (Server : in out Server_Type
       ;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   generic
      type Implementation_Type is limited new Server_Type with private;
   package Skeleton is

      procedure Register (Server : in out Swagger.Servers.Application_Type'Class);


      --  
      procedure 1
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure 2
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure 3
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure 4
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);

   end Skeleton;

   generic
      type Implementation_Type is limited new Server_Type with private;
   package Shared_Instance is

      procedure Register (Server : in out Swagger.Servers.Application_Type'Class);


      --  
      procedure 1
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure 2
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure 3
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure 4
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


   private
      protected Server is

         --  
         procedure 1 (Context : in out Swagger.Servers.Context_Type);

         --  
         procedure 2 (Context : in out Swagger.Servers.Context_Type);

         --  
         procedure 3 (Context : in out Swagger.Servers.Context_Type);

         --  
         procedure 4 (Context : in out Swagger.Servers.Context_Type);

      private
         Impl : Implementation_Type;
      end Server;
   end Shared_Instance;

end .Skeletons;
